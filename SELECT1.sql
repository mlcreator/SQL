/*

В «Таблице 1» содержатся некоторые данные о поведении Клиентов за три месяца
В «Таблице 2» данные об оттоке этих Клиентов в 4-м месяце.
Необходимо из исходных таблиц получить  таблицу со следующими характеристиками (описание показателей на вкладке «Словарь показателей»): 
•         В таблицу должны попасть  клиенты со сроком жизни (CL_AGE) больше 90 дней на март 2016г.
•         В таблицу должны попасть только клиенты с ненулевым количеством интернет сессий (ACC_COUNT_INTER)  в марте 2016г.
•         Таблица должна иметь следующие показатели по каждому идентификатору клиента: 
o   Возраст клиента в марте 2016 г.
o   Показатели № 4-20 за месяца января-марта 2016 г.  (данные за каждый месяц по каждому показателю отдельно)
o   Суммарное значение за три месяца  для показателей № 4, 13, 18 (сумма  рассчитывается по каждому показателю в отдельности)
o   Сумма максимального платежа за три месяца
o   Среднее значение за три месяца для показателей № 9, 10, 12
o   Показатель, характеризующий наличие хотя бы одной аварии за три месяца (1 – аварии были, 0 – не было)
o   Показатель, характеризующий наличие хотя бы одно перехода из добросовестного плательщика в недобросовестного за 3 мес. (1 – был переход, 0 – не было)
o   Показатель – таргет с листа «Таблица 2»

Итоговый результат: написанный скрипт SQL , который  исходную таблицу преобразует  в вышеописанный вид + таблица в excel с результатами запуска скрипта

 */

SELECT
	ft.ID_CLIENT
    , SUBSTRING_INDEX(GROUP_CONCAT(ACC_COUNT_INTER), ',', 1) as ACC_COUNT_INTER_MONTH_1
    , SUBSTRING_INDEX(SUBSTRING_INDEX(GROUP_CONCAT(ACC_COUNT_INTER), ',', 2), ',', -1) as ACC_COUNT_INTER_MONTH_2
    , SUBSTRING_INDEX(SUBSTRING_INDEX(GROUP_CONCAT(ACC_COUNT_INTER), ',', 3), ',', -1) as ACC_COUNT_INTER_MONTH_3
    
    , SUBSTRING_INDEX(GROUP_CONCAT(ACC_TIME_INTER), ',', 1) as ACC_TIME_INTER_MONTH_1
    , SUBSTRING_INDEX(SUBSTRING_INDEX(GROUP_CONCAT(ACC_TIME_INTER), ',', 2), ',', -1) as ACC_TIME_INTER_MONTH_2
    , SUBSTRING_INDEX(SUBSTRING_INDEX(GROUP_CONCAT(ACC_TIME_INTER), ',', 3), ',', -1) as ACC_TIME_INTER_MONTH_3
    
    , SUBSTRING_INDEX(GROUP_CONCAT(AG_CALL_EXISTS), ',', 1) as AG_CALL_EXISTS_MONTH_1
    , SUBSTRING_INDEX(SUBSTRING_INDEX(GROUP_CONCAT(AG_CALL_EXISTS), ',', 2), ',', -1) as AG_CALL_EXISTS_MONTH_2
    , SUBSTRING_INDEX(SUBSTRING_INDEX(GROUP_CONCAT(AG_CALL_EXISTS), ',', 3), ',', -1) as AG_CALL_EXISTS_MONTH_3
    
    , SUBSTRING_INDEX(GROUP_CONCAT(AG_FACT_ANTIVIRUS), ',', 1) as AG_FACT_ANTIVIRUS_MONTH_1
    , SUBSTRING_INDEX(SUBSTRING_INDEX(GROUP_CONCAT(AG_FACT_ANTIVIRUS), ',', 2), ',', -1) as AG_FACT_ANTIVIRUS_MONTH_2
    , SUBSTRING_INDEX(SUBSTRING_INDEX(GROUP_CONCAT(AG_FACT_ANTIVIRUS), ',', 3), ',', -1) as AG_FACT_ANTIVIRUS_MONTH_3
    
    , SUBSTRING_INDEX(GROUP_CONCAT(AG_FACT_SB), ',', 1) as AG_FACT_SB_MONTH_1
    , SUBSTRING_INDEX(SUBSTRING_INDEX(GROUP_CONCAT(AG_FACT_SB), ',', 2), ',', -1) as AG_FACT_SB_MONTH_2
    , SUBSTRING_INDEX(SUBSTRING_INDEX(GROUP_CONCAT(AG_FACT_SB), ',', 3), ',', -1) as AG_FACT_SB_MONTH_3
    
    , SUBSTRING_INDEX(GROUP_CONCAT(AG_INTER_CNT), ',', 1) as AG_INTER_CNT_MONTH_1
    , SUBSTRING_INDEX(SUBSTRING_INDEX(GROUP_CONCAT(AG_INTER_CNT), ',', 2), ',', -1) as AG_INTER_CNT_MONTH_2
    , SUBSTRING_INDEX(SUBSTRING_INDEX(GROUP_CONCAT(AG_INTER_CNT), ',', 3), ',', -1) as AG_INTER_CNT_MONTH_3
    
    , SUBSTRING_INDEX(GROUP_CONCAT(PAY_BALANCE), ',', 1) as PAY_BALANCE_MONTH_1
    , SUBSTRING_INDEX(SUBSTRING_INDEX(GROUP_CONCAT(PAY_BALANCE), ',', 2), ',', -1) as PAY_BALANCE_MONTH_2
    , SUBSTRING_INDEX(SUBSTRING_INDEX(GROUP_CONCAT(PAY_BALANCE), ',', 3), ',', -1) as PAY_BALANCE_MONTH_3
    
    , SUBSTRING_INDEX(GROUP_CONCAT(PAY_BILL_PAYMENT), ',', 1) as PAY_BILL_PAYMENT_MONTH_1
    , SUBSTRING_INDEX(SUBSTRING_INDEX(GROUP_CONCAT(PAY_BILL_PAYMENT), ',', 2), ',', -1) as PAY_BILL_PAYMENT_MONTH_2
    , SUBSTRING_INDEX(SUBSTRING_INDEX(GROUP_CONCAT(PAY_BILL_PAYMENT), ',', 3), ',', -1) as PAY_BILL_PAYMENT_MONTH_3
    
    , SUBSTRING_INDEX(GROUP_CONCAT(PAY_COUNT_DEBT_ALL), ',', 1) as PAY_COUNT_DEBT_ALL_MONTH_1
    , SUBSTRING_INDEX(SUBSTRING_INDEX(GROUP_CONCAT(PAY_COUNT_DEBT_ALL), ',', 2), ',', -1) as PAY_COUNT_DEBT_ALL_MONTH_2
    , SUBSTRING_INDEX(SUBSTRING_INDEX(GROUP_CONCAT(PAY_COUNT_DEBT_ALL), ',', 3), ',', -1) as PAY_COUNT_DEBT_ALL_MONTH_3
    
    , SUBSTRING_INDEX(GROUP_CONCAT(PAY_COUNT_PROMISE_PAYMENT), ',', 1) as PAY_COUNT_PROMISE_PAYMENT_MONTH_1
    , SUBSTRING_INDEX(SUBSTRING_INDEX(GROUP_CONCAT(PAY_COUNT_PROMISE_PAYMENT), ',', 2), ',', -1) as PAY_COUNT_PROMISE_PAYMENT_MONTH_2
    , SUBSTRING_INDEX(SUBSTRING_INDEX(GROUP_CONCAT(PAY_COUNT_PROMISE_PAYMENT), ',', 3), ',', -1) as PAY_COUNT_PROMISE_PAYMENT_MONTH_3
    
    , SUBSTRING_INDEX(GROUP_CONCAT(PAY_NEGATIVE_BALANCE_DAYS), ',', 1) as PAY_NEGATIVE_BALANCE_DAYS_MONTH_1
    , SUBSTRING_INDEX(SUBSTRING_INDEX(GROUP_CONCAT(PAY_NEGATIVE_BALANCE_DAYS), ',', 2), ',', -1) as PAY_NEGATIVE_BALANCE_DAYS_MONTH_2
    , SUBSTRING_INDEX(SUBSTRING_INDEX(GROUP_CONCAT(PAY_NEGATIVE_BALANCE_DAYS), ',', 3), ',', -1) as PAY_NEGATIVE_BALANCE_DAYS_MONTH_3
    
    , SUBSTRING_INDEX(GROUP_CONCAT(PAY_PROM_PAYER), ',', 1) as PAY_PROM_PAYER_MONTH_1
    , SUBSTRING_INDEX(SUBSTRING_INDEX(GROUP_CONCAT(PAY_PROM_PAYER), ',', 2), ',', -1) as PAY_PROM_PAYER_MONTH_2
    , SUBSTRING_INDEX(SUBSTRING_INDEX(GROUP_CONCAT(PAY_PROM_PAYER), ',', 3), ',', -1) as PAY_PROM_PAYER_MONTH_3
    
    , SUBSTRING_INDEX(GROUP_CONCAT(PAY_SUMM_DISC_OTHER), ',', 1) as PAY_SUMM_DISC_OTHER_MONTH_1
    , SUBSTRING_INDEX(SUBSTRING_INDEX(GROUP_CONCAT(PAY_SUMM_DISC_OTHER), ',', 2), ',', -1) as PAY_SUMM_DISC_OTHER_MONTH_2
    , SUBSTRING_INDEX(SUBSTRING_INDEX(GROUP_CONCAT(PAY_SUMM_DISC_OTHER), ',', 3), ',', -1) as PAY_SUMM_DISC_OTHER_MONTH_3
    
    , SUBSTRING_INDEX(GROUP_CONCAT(PAY_SUMM_MONTH), ',', 1) as PAY_SUMM_MONTH_MONTH_1
    , SUBSTRING_INDEX(SUBSTRING_INDEX(GROUP_CONCAT(PAY_SUMM_MONTH), ',', 2), ',', -1) as PAY_SUMM_MONTH_MONTH_2
    , SUBSTRING_INDEX(SUBSTRING_INDEX(GROUP_CONCAT(PAY_SUMM_MONTH), ',', 3), ',', -1) as PAY_SUMM_MONTH_MONTH_3
    
    , SUBSTRING_INDEX(GROUP_CONCAT(SERV_COUNT), ',', 1) as SERV_COUNT_MONTH_1
    , SUBSTRING_INDEX(SUBSTRING_INDEX(GROUP_CONCAT(SERV_COUNT), ',', 2), ',', -1) as SERV_COUNT_MONTH_2
    , SUBSTRING_INDEX(SUBSTRING_INDEX(GROUP_CONCAT(SERV_COUNT), ',', 3), ',', -1) as SERV_COUNT_MONTH_3
    
    , SUBSTRING_INDEX(GROUP_CONCAT(SERV_INTER_REPEAT), ',', 1) as SERV_INTER_REPEAT_MONTH_1
    , SUBSTRING_INDEX(SUBSTRING_INDEX(GROUP_CONCAT(SERV_INTER_REPEAT), ',', 2), ',', -1) as SERV_INTER_REPEAT_MONTH_2
    , SUBSTRING_INDEX(SUBSTRING_INDEX(GROUP_CONCAT(SERV_INTER_REPEAT), ',', 3), ',', -1) as SERV_INTER_REPEAT_MONTH_3
    
    , SUBSTRING_INDEX(GROUP_CONCAT(SERV_REQ_CONN), ',', 1) as SERV_REQ_CONN_MONTH_1
    , SUBSTRING_INDEX(SUBSTRING_INDEX(GROUP_CONCAT(SERV_REQ_CONN), ',', 2), ',', -1) as SERV_REQ_CONN_MONTH_2
    , SUBSTRING_INDEX(SUBSTRING_INDEX(GROUP_CONCAT(SERV_REQ_CONN), ',', 3), ',', -1) as SERV_REQ_CONN_MONTH_3

    , SUM(ACC_COUNT_INTER) AS ACC_COUNT_INTER_SUM
    , SUM(PAY_COUNT_PROMISE_PAYMENT) AS PAY_COUNT_PROMISE_PAYMENT_SUM
	, SUM(SERV_COUNT) AS SERV_COUNT_SUM
    , MAX(PAY_SUMM_MONTH) AS PAY_SUMM_MONTH_MAX
    , AVG(AG_INTER_CNT) AS AG_INTER_CNT_AVG
    , AVG(PAY_BALANCE) AS PAY_BALANCE_AVG
    , AVG(PAY_COUNT_DEBT_ALL) AS PAY_COUNT_DEBT_ALL_AVG
    , CASE WHEN SUM(ACC_COUNT_INTER)>0 THEN 1 ELSE 0 END AS ACC_COUNT_INTER_0_1
    , CASE WHEN COUNT(DISTINCT PAY_PROM_PAYER)=1 THEN 0 ELSE 1 END AS PAY_PROM_PAYER_0_1
    , TARGET
FROM
	first_table as ft
INNER JOIN (
	SELECT
        ft.ID_CLIENT
        , st.TARGET
    FROM
        second_table AS st, first_table AS ft
    WHERE
        ft.ID_CLIENT=st.ID_CLIENT AND
        YEAR(ft.CALC_PERIOD) = '2016' AND
        MONTH(ft.CALC_PERIOD) = '03' AND
        ft.CL_AGE>90 AND
        ft.ACC_COUNT_INTER>0
     ) as t
ON ft.ID_CLIENT=t.ID_CLIENT
GROUP BY
	ft.ID_CLIENT